=== "READY TO FIGHT" color changing ===

Banner ID = 0x1F
Changing C,D,E changes the color of the banner.
8111e60c = byte 1F
+      7 = byte 0C
8111e66c = byte 1F
+      7 = byte 0D
8111e6cc = byte 1F
+      7 = byte 0E

Not sure where this data is loaded from, but it is overwritten every time CSS is loaded.
So, hooking in to the end of CSS_LoadFunction, branch at 80266880.  Replace X Y Z with your values.

lis r14, 0x8111
ori r14, r14, 0xE613
li r15, 0xX
stb r15, 0(r14)
addi r14, r14, 0x60
li r15, 0xY
stb r15, 0(r14)
addi r14, r14, 0x60
li r15, 0xZ
stb r15, 0(r14)
addi sp, sp, 488

TODO: Why did I add 0x60 instead of just changing the offset of r14? Fix that.

=== Checking button presses ===

According to the SSBM Data Sheet, player 1's digital inputs start at 804C1FAC.
Bits: -------- UDLRUDLR ---SYXBA -LRZUDRL
The next player's inputs are offset by 0x44.

I wanted to check if the Start button (byte 3) was pressed on any controller:

lis r14, 0x804C
lbz r15, 0x1FAE(r14)
li r14, 0x10
and r14, r14, r15
cmpwi r14, 0x10
bne not_pressed
; TODO: Other players.
; Do stuff for when Start is pressed

I can find PowerPC documentation for an "andi" instruction but it looks like the GameCube
doesn't have it.  So, had to use an extra register to hold the mask for Start.

=== Rumble Toggle ===

flag addr calc:
r0 = word value at r13 - 0x77c0
r3 = r3 + r0
flag = r3 + 0x1cc0
LoadRumbleFlag stores flag in r3
StoreRumbleFLag stores r4 in flag
Warning: putting breakpoints in these procedures causes weirdness & crashes.

r13 = 804db6a0 (constant)
0 = no rumble, 1 = rumble

So it seems rumble flags (byte 0 or 1) are stored at 8045C380.
4 bytes for 4 players.
This seems to be the same address on every run.

So to toggle, let's check if R was just pressed.
"Just pressed" would mean this frame there is no button press, but there was last frame.
Luckily, Melee keeps track of the previous frame's inputs.

	li r17, 0
check_last_frame:
	lis r14, 0x804C
	ori r14, r14, 0x1FB3
	mulli r15, r17, 0x44
	add r14, r14, r15
	lbz r15, 0(r14)
	li r16, 0x20
	and r16, r16, r15
	cmpwi r16, 0x20
	bne skip_toggle
check_this_frame:
	lbz r15, -4(r14)
	li r16, 0x20
	and r16, r16, r15
	cmpwi r16, 0
	bne skip_toggle
toggle:
	lis r14, 0x8045
	ori r14, r14, 0xC380
	add r14, r14, r17
	lbz r15, 0(r14)
	not r15, r15
	li r16, 1
	and r15, r15, r16
	stb r15, 0(r14)
skip_toggle:
	addi r17, r17, 1
	cmpwi r17, 4
	blt check_last_frame

Future usage?:
MakeControllerRumble is called (if a controller has rumble on) when going from CSS to SSS.
It makes the call with the following values:
r3 = 0/1/2/3 (player ID)
r4 = 0
r5 = 0x1E
r6 = 5
r7 = might be an argument?

=== Player name color on CSS ===

Format: RRGGBB
P1: 80bd5d56
P2: 80bd6206
P3: 80bd66b6
P4: 80bd6b66
Offset is 0x4B0